---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sieve-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sieve-api
  template:
    metadata:
      labels:
        app: sieve-api
    spec:
      containers:
      - name: sieve-api
        image: sieve-api:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
---
# api server needs to be able to create a job
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: create-job
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: create-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: create-job
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# model needs to add annotation to itself
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: update-pod
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: update-pod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: update-pod
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Very rudimentary redis deployment!
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis/redis-stack:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  selector:
    app: redis